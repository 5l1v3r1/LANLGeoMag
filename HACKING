Instructions for developers who use the source code repository
**************************************************************

GIT repository
==============

Initial checkout:

git clone ssh://YOUR_SCHEME_LOGIN@sueno.lanl.gov/n/projects/lanl/LanlGeoMag.git

cd LanlGeoMag

Later updates:

git pull

Committing your work:

git commit -a
git pull
git push


Prerequisites
=============

git
libperl-dev


Compiling
=========

Just once (or just occasionally):

autoreconf -i
./configure

Every time:

make


Installing
==========
sudo make install


Release engineering
===================

Example: you want to freeze and release version 1.5.12.  The
convention is that we use tags with the name v1.5.12

Developer actions
.................

The developer takes these steps:

* Commit all final changes and sure that the code passes "make
  distcheck"

* Set the new version in configure.ac with AC_INIT(... , [1.5.12] , ...)

* Update the NEWS file with a list of user-visible or API changes

* Tag the repository with

git tag -a v1.5.12
git commit -m "tagged release v1.5.12"
git push --tags

* Then move to the "development" version v1.5.12+ by editing
  configure.ac and NEWS and putting AC_INIT(... , [1.5.12] , ...)

Release engineer actions
........................

Start with a fresh clone followed by a checkout of the release tag:

git clone ssh://YOUR_SCHEME_LOGIN@svn.isr.lanl.gov/n/projects/lanl/LanlGeoMag.git LanlGeoMag-v1.5.12
cd LanlGeoMag-v1.5.12
git checkout v1.5.12

autoreconf -i
./configure
make distcheck

And you've got a well-tracked tarball called lanlgeomag-1.5.12.tar.gz

Finally, you can try running

rpmbuild -ta lanlgeomag-1.5.12.tar.gz

to build RPMs.  RPMs are not yet working because we still have
/usr/lanl hard-coded in a lot of places, but we are getting closer.
